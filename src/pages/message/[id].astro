---
import Layout from "../../layouts/Layout.astro";
import { PrismaClient } from "@prisma/client";

const prisma = new PrismaClient()

const { id } = Astro.params

const message = await prisma.frontPageMessage.findUnique({
    where: {
        id: id
    },
    include: {
        replies: true
    }
})

if (!message) {
    return Astro.redirect("/notfound")
}
---

<Layout>
    <div style="margin: 1rem; padding: 1rem; width: fit-content; background: #fff1;">
        <h1 style="color: #a57549; font-size: 1.75rem;">
            <span>
                <span class="mono">{message.id.split("").map(c => c.match(/\d/) ? <span style="color: orangered">{c}</span> : c)}</span>
                {message.replyToId ? <span style="color: #f0f0f0; font-size: 1.5rem; font-weight: 400;">replies to</span> <a style="color: inherit; text-decoration: none;" class="mono" href={`/message/${message.replyToId}`}>{message.replyToId}</a> : ""}
            </span>
        </h1>
        <p style="opacity: 0.5;">
            {message.createdAt.toLocaleString("en-GB", {day: "2-digit", month: "2-digit", year: "numeric", hour: "2-digit", minute: "2-digit"})}
        </p>
        <p>
            {message.message}
        </p>
    </div>
    {message.replies.length > 0 && <div style="margin: 1rem; padding: 1rem; width: fit-content; background: #fff1;">
        <h2>Replies ({message.replies.length})</h2>
        <div>
            {message.replies.map(r => <div><a class="mono" style="color: #a57549;" href={`/message/${r.id}`}>{r.id}</a>: {r.message}</div>)}
        </div>
    </div>}
</Layout>
